//Обычно в телах функций пишется так:
(*
       If Assigned(ProgressProc) then
         If not(ProgressProc(<Done>,<All>,<ID>)) then exit;
*)

(*
  Что необходимо проделать: при вызове одних "долгих функций" из
других "долгих функций" (например, Replace из SplitToWords) результирующий
прогресс замирает UCRTL_ID_PREPARE надолго. Надо сделать внутренний обработчик
в теле жирных функций для правильного отображения прогресса.
*)
Type TProgressProc=Function(OpDone,OpCount,FuncID:Integer):Boolean;
//Переменная типа TProgressProc представляет собой указатель на процедуру 
//обратного вызова для функций и процедур библиотеки U_CRTL. Такая процедура
//определяется пользователем и вызывается некоторыми процедурами и функциями 
//библиотеки, время работы которых может быть велико (например, при обработке 
//больших объёмов текста функцией Replace). При вызове процедуры обратного 
//вызова в неё передаются следующие парамаетры:
//- OpDone  - число _уже_ проделанных операций;
//- OpCount - общее число операций, которое необходимо проделать;
//- FuncID  - уникальный идентификатор функции, вызывающей эту процедуру.
//
//Процедура обратного вызова описывается как функция, возвращающая булево
//значение. Если возвращаемое значение = False, то                       
//ВНИМАНИЕ!!! ВЫЗВАВШАЯ ФУНКЦИЯ ЗАВЕРШАЕТ СВОЮ РАБОТУ!!!                 
//Для продолжения работы вы должны вернуть TRUE!!!                       

//Декларация именованных констант:
Const
UCRTL_ID_PREPARE       =   0;
//Этот ID передаётся при внутреннем вызове другой функции, который делается
//как правило для подсчёта общего числа операций.
//При этом аргумент OpDone=0, OpCount=1, но иногда OpCount равен числу
//"больших" операций, сопряженных с внутренними вызовами функций.
UCRTL_ID_REPLACE                   =   1;
//Передаётся функциями Replace и Modify
UCRTL_ID_SPLIT                     =   2;
//Передаётся функциями Split, SplitToWords, SplitToParagraphs
UCRTL_ID_BYTEARRAYTOHEXSTR         =   4;
//Передаётся функцией ByteArrayToHexStr
UCRTL_ID_BYTEARRAYTOSTR            =   5;
//Передаётся функцией ByteArrayToStr
UCRTL_ID_HEXSTRTOSTR               =   6;
//Передаётся функцией HexStrToStr
UCRTL_ID_REALIGNHEXSTR             =   7;
//Передаётся функцией RealignHexStr
UCRTL_ID_HEXSTRTOBYTEARRAY         =   9;
//Передаётся функцией HexStrToByteArray
UCRTL_ID_WAIT4WND                  =   10;
//Передаётся функцией WaitForWndEx, Wait4Wnd и Wait4WndDie
UCRTL_ID_DELAY			   =   11;
//Передаётся функцией Delay


